{"meta":{"title":"Thieu Nguyen's Blog","subtitle":null,"description":"Write somethings about programming, life, travel, etc...","author":"Thieu Nguyen","url":"https://thieunv.me"},"pages":[{"title":"Categories","date":"2018-02-27T17:28:23.444Z","updated":"2018-02-27T15:12:54.843Z","comments":true,"path":"categories/index.html","permalink":"https://thieunv.me/categories/index.html","excerpt":"","text":""},{"title":"About Me","date":"2018-03-12T07:32:53.314Z","updated":"2018-03-12T07:32:53.314Z","comments":true,"path":"about/index.html","permalink":"https://thieunv.me/about/index.html","excerpt":"","text":"Full name:Nguyen Van ThieuBirthday:18/02/1990 I’m a developer who love to try and learn new technologies about Web development, especially with Ruby, Ruby on Rails and Javascript Framework (AngularJS, VueJS, ReactJS). My major is mainly working with Ruby/Rails. Currently I’m working as a backend developer at Tokyo, Japan. I’m planning to take a deep dive into Ruby/Rails, I’m also learn another backend programming language (maybe Go) and the new fastest growing JS framework: VueJS. I really like a Steve’s saying: “The only way to do great work is to love what you do. If you haven’t found it yet, keep looking. Don’t settle.”"},{"title":"Tags","date":"2018-02-27T17:28:23.470Z","updated":"2018-02-27T15:12:54.843Z","comments":true,"path":"tags/index.html","permalink":"https://thieunv.me/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Responsive CSS Spacing Helper Classes","slug":"responsive-css-spacing-helper-classes","date":"2018-03-14T07:14:31.000Z","updated":"2018-03-14T12:05:09.649Z","comments":true,"path":"responsive-css-spacing-helper-classes/","link":"","permalink":"https://thieunv.me/responsive-css-spacing-helper-classes/","excerpt":"IntroductionKhi positioning một element sử dụng margin &amp; padding trên các viewports khác nhau, cách thông thường mọi người hay làm là dùng thuộc tính @media định nghĩa ra các breakpoints rồi trên từng breakpoint sẽ css margin và padding cho element đó. Tuy nhiên, hôm nay mình sẽ giới thiệu 1 cách khác không cần sử dụng thuộc tính @media trên element mà vẫn có thể positioning được, bằng cách tạo ra 1 bộ helper class với các giá trị margin và padding được set sẵn trên từng breakpoint cụ thể.","text":"IntroductionKhi positioning một element sử dụng margin &amp; padding trên các viewports khác nhau, cách thông thường mọi người hay làm là dùng thuộc tính @media định nghĩa ra các breakpoints rồi trên từng breakpoint sẽ css margin và padding cho element đó. Tuy nhiên, hôm nay mình sẽ giới thiệu 1 cách khác không cần sử dụng thuộc tính @media trên element mà vẫn có thể positioning được, bằng cách tạo ra 1 bộ helper class với các giá trị margin và padding được set sẵn trên từng breakpoint cụ thể. Example &amp; ExplanationĐể hiểu rõ hơn ý mình nói ở trên, các bạn xem ví dụ sau đây: Giả sử mình đang dùng bootstrap và có layout structure như sau: 12345678&lt;div class=\"container\"&gt; &lt;div class=\"row\"&gt; &lt;div id=\"content\" class=\"col-md-8\"&gt; &lt;/div&gt;&lt;!-- content --&gt; &lt;div id=\"sidebar\" class=\"col-md-4\"&gt; &lt;/div&gt;&lt;!-- sidebar --&gt; &lt;/div&gt;&lt;!-- \"row\" --&gt;&lt;/div&gt;&lt;!-- \"container\" --&gt; Bây giờ mình muốn: Trên desktop và tablet: sidebar và content có margin cách bottom 1 khoảng là 20px Trên các thiết bị có kích cỡ màn hình 768px hoặc nhỏ hơn thì cách bottom 40px. Thông thường thì các bạn sẽ viết css như sau: 123456789#content, #sidebar &#123; margin-bottom: 20px;&#125;@media(max-width:767px) &#123; #content, #sidebar &#123; margin-bottom: 40px; &#125;&#125; Tuy nhiên, với việc định nghĩa sẵn bộ helper classes thì các bạn không cần phải viết thêm dòng code css nào như trên, chỉ đơn giản thêm vào helper class xs-mb-40 và md-mb-20 như code bên dưới: 12345678&lt;div class=\"container\"&gt; &lt;div class=\"row\"&gt; &lt;div id=\"content\" class=\"col-md-8 xs-mb-40 md-mb-20\"&gt; &lt;/div&gt;&lt;!-- content --&gt; &lt;div id=\"sidebar\" class=\"col-md-4 xs-mb-40 md-mb-20\"&gt; &lt;/div&gt;&lt;!-- sidebar --&gt; &lt;/div&gt;&lt;!-- \"row\" --&gt;&lt;/div&gt;&lt;!-- \"container\" --&gt; Class có prefix xs- được định nghĩa trong global viewport (min-width: 0px) và class có prefix md- được định nghĩa trong tablet viewport (min-width: 768px). Chi tiết các bạn xem hình và giải thích bên dưới: Phần màu đỏĐịnh nghĩa các viewport size cho element: xs: Extra small screen / phone (breakpoint: 0).xs đại diện cho global viewport, bạn có thể dùng prefix này trong trường hợp muốn tất cả các screen đều có cùng giá trị margin &amp; padding. sm: Small screen / phone (breakpoint: 480px) md: Medium screen / tablet (breakpoint: 768px) lg: Large screen / desktop (breakpoint: 992px) xl: Extra large screen / wide desktop (breakpoint: 1200px) Các breakpoint trên chỉ là những breakpoint phổ biến, tuỳ vào dự án bạn đang làm mà có thể điều chỉnh lại giá trị breakpoint cho phù hợp. Phần màu xanh dươngĐịnh nghĩa thuộc tính margin hay padding nào muốn dùng: p padding pt padding-top pr padding-right pb padding-bottom pl padding-left m margin mt margin-top mr margin-right mb margin-bottom ml margin-left Phần màu xanh láĐịnh nghĩa con số px dùng để margin hoặc padding, ví dụ 0, 5, 10, 15, 20… CSS Spacing Helper ClassesDưới đây là toàn bộ helper classes mình muốn giới thiệu với các bạn: LESS SASS CSS Nếu chỉ muốn dùng css, các bạn có thể dùng css preprocessors để compile sang css hoặc có thể dùng trực tiếp file đã được generate sẵn sau:https://github.com/thieunv90/less-space/blob/master/dist/less-space.css Source &amp; Referrenceshttp://aslanbakan.com/en/blog/less-space-responsive-css-margin-and-padding-helper-classes/","categories":[{"name":"frontend","slug":"frontend","permalink":"https://thieunv.me/categories/frontend/"}],"tags":[{"name":"css","slug":"css","permalink":"https://thieunv.me/tags/css/"},{"name":"less","slug":"less","permalink":"https://thieunv.me/tags/less/"},{"name":"sass","slug":"sass","permalink":"https://thieunv.me/tags/sass/"},{"name":"margin","slug":"margin","permalink":"https://thieunv.me/tags/margin/"},{"name":"padding","slug":"padding","permalink":"https://thieunv.me/tags/padding/"}]},{"title":"Rotate logs in Rails","slug":"rotate-logs-in-rails","date":"2018-03-12T07:41:15.000Z","updated":"2018-03-14T07:29:47.757Z","comments":true,"path":"rotate-logs-in-rails/","link":"","permalink":"https://thieunv.me/rotate-logs-in-rails/","excerpt":"Khi chạy ứng dụng Rails trên production, nếu mặc định các bạn không config gì, log file ngày qua ngày sẽ được ghi thêm vào và ngày càng phình to ra, đặc biệt đối với những ứng dụng có lượng traffic lớn thì tốc độ phình to sẽ rất nhanh. Đến một lúc nào đó sẽ làm cho ổ cứng hết dung lượng, khi đó sẽ phát sinh một số lỗi gây ảnh hưởng đến ứng dụng (chẳng hạn như việc không load được thư viện jQuery làm vỡ layout, v.v..). Hơn nữa, log file càng lớn thì sẽ tốn một khoảng thời gian khá lâu để mở mỗi khi muốn debug. Vì vậy, cần thiết phải “chia để trị” chúng.","text":"Khi chạy ứng dụng Rails trên production, nếu mặc định các bạn không config gì, log file ngày qua ngày sẽ được ghi thêm vào và ngày càng phình to ra, đặc biệt đối với những ứng dụng có lượng traffic lớn thì tốc độ phình to sẽ rất nhanh. Đến một lúc nào đó sẽ làm cho ổ cứng hết dung lượng, khi đó sẽ phát sinh một số lỗi gây ảnh hưởng đến ứng dụng (chẳng hạn như việc không load được thư viện jQuery làm vỡ layout, v.v..). Hơn nữa, log file càng lớn thì sẽ tốn một khoảng thời gian khá lâu để mở mỗi khi muốn debug. Vì vậy, cần thiết phải “chia để trị” chúng. Hôm nay mình xin giới thiệu 2 cách để rotate logs, tuy không mới nhưng chắc có một số bạn mới làm việc với Rails sẽ không để ý đến. Ruby Logger classRuby default Logger cung cấp build-in có sẵn hỗ trợ việc rotate logs, có 2 options: Split by sizeconfig/enviroments/production.rb1config.logger = Logger.new('log/production.log', 5, 10.megabytes) Khi được set như trên thì hệ thống sẽ tự động tạo new log file mỗi khi dung lượng vượt quá 10MB, chỉ giữ lại tối đa 5 files, các log file cũ sẽ được đặt tên thành: production.log.0, production.log.1, … Split by daysNgoài cách config theo size ở trên thì Ruby còn hỗ trợ cách set theo daily/weekly/monthly như sau: config/enviroments/production.rb1config.logger = Logger.new('log/production.log', 'daily') 1config.logger = Logger.new('log/production.log', 'weekly') 1config.logger = Logger.new('log/production.log', 'monthly') Các log file sẽ có format là production.log.20180310, production.log.20180311, production.log.20180312, …Không giống như config theo size, khi config theo cách này thì các file logs sẽ không tự động được xoá, và nếu không để ý thì một ngày nào đó nó sẽ chiếm hết dung lượng ở cứng của bạn đấy. LogrotateCách khác để rotate là sử dụng Logrotate, Logrotate cung cấp nhiều tính năng hơn, ví dụ như rotate theo daily nhưng chỉ giữ lại 10 log files tương ứng với 10 ngày gần nhất, compress log file, v.v… Sau đây là các bước cài đặt và cách dùng: Install12345678---------- On Debian and Ubuntu ----------sudo apt-get update &amp;&amp; sudo apt-get install logrotate---------- On CentOS, RHEL and Fedora ----------yum update &amp;&amp; yum install logrotate---------- On MacOSX using Homebrew ----------brew install logrotate How To UseSau khi install xong, bạn có thể config thẳng trong file /etc/logrotate.conf hoặc tách biệt thành config riêng trong thư mục /etc/logrotate.d (đảm bảo rằng dòng include /etc/logrotate.d có tồn tại trong /etc/logrotate.conf và không bị commented out) Ở đây, mình sẽ chọn cách 2, tách thành config riêng biệt và đặt trong /etc/logrotate.d. Dùng command bên dưới để tạo logrotate config file cho Rails app của bạn: sudo nano /etc/logrotate.d/&lt;your-app-name&gt; Giả sử Rails application nằm ở home directory của deploy user, dưới đây là một số config thông dụng mình hay dùng: 1234567891011/home/deploy/&lt;your-app-name&gt;/current/log/*.log &#123; daily missingok rotate 7 dateext notifempty copytruncate compress delaycompress&#125; daily- Rotate log file mỗi ngày 1 lần, ngoài ra còn có các options khác như: weekly, monthly missingok- Nếu log file không tồn tại, ignore không báo lỗi. rotate 7- Chỉ giữ lại 7 log files (với setting daily ở trên thì tương ứng với việc giữ lại log của 7 ngày gần nhất) dateext- Đổi extension thành date format (YYYYMMDD) ví dụ như production.log.20180311, production.log.20180312, thay vì default là number (production.log.0, production.log.1) notifempty - Không rotate nếu log file empty copytruncate - Copy log file và sau đó truncate empty file log đó, được sử dụng để đề phòng đến trường hợp một số ứng dụng không thể close log file mà write vào previous log file cũ mãi mãi. Lưu ý rằng có một khoảng thời gian rất nhỏ giữa việc copy và truncate, điều này dẫn đến việc một số logging data có thể sẽ bị mất trong quá trình copy. compress- Compress log file bằng Gzip khi rotate, file sau khi được compress sẽ có dạng production.log.1.gz, production.log.2.gz delaycompress - Gzip previous log file khi sang next rotation cycle, chỉ có tác dụng khi setting cùng với compress, setting này được sử dụng để đề phòng đến trường hợp một số ứng dụng không thể close log file mà thỉnh thoảng vẫn tiếp tục write vào previous log file cũ. Ngoài ra: Nếu muốn rotate theo file size thì bỏ option daily, thêm vào option size 10M (max file size của mỗi log file là 10MB | k-kilobytes, M-megabytes, G-gigabytes), lưu ý là 2 option daily và size không tồn tại đồng thời với nhau. Nếu muốn các log files cũ trong 1 folder riêng biệt nào đó (không phải trong folder log của Rails application) thì thêm vào option olddir /var/&lt;path-to-your-custom-directory&gt; How To RunBước cuối cùng là chạy logrotate file config phía trên, có 2 cách (manually và automatically): Manually Rất đơn giản, dùng command: sudo logrotate /etc/logrotate.d/&lt;your-app-name&gt; Automatically Ví dụ bây giờ mình muốn tạo cron job để rotate tự động mỗi ngày. Đầu tiên, dùng command sau để tạo cron config cho logrotate: sudo nano /etc/cron.daily/logrotate Nội dung cron config: 12345678#!/bin/sh/usr/sbin/logrotate /etc/logrotate.conf &gt;/dev/nullEXITVALUE=$?if [ $EXITVALUE != 0 ]; then /usr/bin/logger -t logrotate &quot;ALERT exited abnormally with [$EXITVALUE]&quot;fiexit 0 Done, bây giờ thì bạn đã có cron job rotate log tự động mỗi ngày. SummaryTrên đây là toàn bộ những chia sẻ của mình về cách config để rotate log file trong Rails application cũng như với các log files khác. Việc rotate là cần thiết vì nó giúp chia nhỏ các file log ra, dễ dàng và nhanh chóng mở log file ra để đọc và debug, đồng thời cũng không gây ra issue chiếm số lượng lớn dung lượng ổ cứng. Tuỳ vào từng yêu cầu cụ thể mà rotate theo cách 1 hoặc 2. Hy vọng bài viết sẽ giúp ích cho các bạn. Referrenceshttps://www.tecmint.com/install-logrotate-to-manage-log-rotation-in-linuxhttp://manpages.ubuntu.com/manpages/trusty/man8/logrotate.8.htmlhttps://gorails.com/guides/rotating-rails-production-logs-with-logrotate","categories":[{"name":"rails","slug":"rails","permalink":"https://thieunv.me/categories/rails/"}],"tags":[{"name":"logrotate","slug":"logrotate","permalink":"https://thieunv.me/tags/logrotate/"},{"name":"logs","slug":"logs","permalink":"https://thieunv.me/tags/logs/"},{"name":"rails","slug":"rails","permalink":"https://thieunv.me/tags/rails/"},{"name":"rotate","slug":"rotate","permalink":"https://thieunv.me/tags/rotate/"}]},{"title":"My journey begins...","slug":"my-journey-begins","date":"2018-03-10T01:37:04.000Z","updated":"2018-03-13T06:47:07.389Z","comments":true,"path":"my-journey-begins/","link":"","permalink":"https://thieunv.me/my-journey-begins/","excerpt":"Chào mọi người, mình tên là Thiệu, 28 tuổi. Mình là 1 Rubyist và cũng có mày mò tìm hiểu một chút bên Javascript, đặc biệt là các javascript frameworks/libs như Angular, Vue, React.","text":"Chào mọi người, mình tên là Thiệu, 28 tuổi. Mình là 1 Rubyist và cũng có mày mò tìm hiểu một chút bên Javascript, đặc biệt là các javascript frameworks/libs như Angular, Vue, React. Mặc dù mình đã có ý định làm blog từ rất lâu rồi thế nhưng 1 phần cũng do lười nên mãi tới năm 2018 này mới bắt đầu mua domain, setup và hôm nay chính thức viết bài viết đầu tiên :D Mình tạo blog này với mục đích làm nơi lưu lại những kiến thức mà mình đã, đang và sẽ học được từ những projects thực tế, từ sách và trên mạng internet. Một phần là có chỗ tập hợp lại để sau này tra cứu cho tiện, mặt khác trong quá trình viết mình có thể củng cố lại kiến thức và hiểu sâu vấn đề hơn. Song song đó mình cũng sẽ dịch một số bài viết hay và thấy tâm đắc trên medium, quora, và trong các sách về technical, etc… Mình khá là thích đi du lịch nên thỉnh thoảng cũng sẽ viết và chia sẻ những trải nghiệm, những bức hình đẹp, những món ăn ngon ở những nơi mà mình đi qua. À, lâu lâu mà các bạn thấy mình viết bằng tiếng Anh thì cũng đừng lấy làm lạ nhé, rèn luyện nâng trình English ấy mà, có viết sai chính tả thì chỉnh giúp mình nha. Hehe :D Hy vọng những gì mình chia sẻ trong blog nhỏ này phần nào đó có thể giúp ích cho mọi người. Mong mọi người ủng hộ nhé! Nào, bắt đầu cuộc hành trình thôi...^^","categories":[{"name":"miscellaneous","slug":"miscellaneous","permalink":"https://thieunv.me/categories/miscellaneous/"}],"tags":[]}]}